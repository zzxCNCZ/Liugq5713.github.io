(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{396:function(t,e,a){"use strict";a.r(e);var r=a(42),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"http-基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-基础"}},[t._v("#")]),t._v(" HTTP 基础")]),t._v(" "),a("h2",{attrs:{id:"http-发送请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-发送请求"}},[t._v("#")]),t._v(" HTTP 发送请求")]),t._v(" "),a("p",[t._v("body 就有这么多的格式")]),t._v(" "),a("h3",{attrs:{id:"application-x-www-form-urlencoded"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#application-x-www-form-urlencoded"}},[t._v("#")]),t._v(" application/x-www-form-urlencoded")]),t._v(" "),a("p",[t._v("Represents an URL encoded form. This is the default value if enctype attribute is not set to anything.")]),t._v(" "),a("h3",{attrs:{id:"multipart-form-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#multipart-form-data"}},[t._v("#")]),t._v(" multipart/form-data")]),t._v(" "),a("p",[t._v("Represents a Multipart form. This type of form is used when the user wants to upload files")]),t._v(" "),a("h3",{attrs:{id:"text-plain"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#text-plain"}},[t._v("#")]),t._v(" text/plain")]),t._v(" "),a("p",[t._v("A new form type introduced in HTML5, that as the name suggests, simply sends the data without any encoding")]),t._v(" "),a("h3",{attrs:{id:"application-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#application-json"}},[t._v("#")]),t._v(" application/json")]),t._v(" "),a("p",[t._v("JSON 格式")]),t._v(" "),a("h2",{attrs:{id:"http-1-1-的缺陷"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-1-1-的缺陷"}},[t._v("#")]),t._v(" HTTP/1.1 的缺陷")]),t._v(" "),a("ul",[a("li",[t._v("高延迟--带来页面加载速度的降低\n网络延迟问题主要由于队头阻塞(Head-Of-Line Blocking),导致带宽无法被充分利用。队头阻塞是指当顺序发送的请求序列中的一个请求因为某种原因被阻塞时，在后面排队的所有请求也一并被阻塞，会导致客户端迟迟收不到数据")]),t._v(" "),a("li",[t._v("无状态特性--带来的巨大 HTTP 头部")]),t._v(" "),a("li",[t._v("明文传输--带来的不安全性")]),t._v(" "),a("li",[t._v("不支持服务器推送消息")])]),t._v(" "),a("h2",{attrs:{id:"http-2-新特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-2-新特性"}},[t._v("#")]),t._v(" HTTP/2 新特性")]),t._v(" "),a("ul",[a("li",[t._v("提升访问速度，二进制传输,HTTP/2 将请求和响应数据分割为更小的帧，并且它们采用二进制编码")]),t._v(" "),a("li",[t._v('Header 压缩，开发了专门的"HPACK”算法，在客户端和服务器两端建立“字典”，用索引号表示重复的字符串，还采用哈夫曼编码来压缩整数和字符串，可以达到 50%~90%的高压缩率')]),t._v(" "),a("li",[t._v("多路复用，HTTP/2 引入二进制数据帧和流的概念，其中帧对数据进行顺序标识，这样浏览器收到数据之后，就可以按照序列对数据进行合并，而不会出现合并后数据错乱的情况。同样是因为有了序列，服务器就可以并行的传输数据，这就是流所做的事情")]),t._v(" "),a("li",[t._v("Server Push")]),t._v(" "),a("li",[t._v("提高安全性")])]),t._v(" "),a("h2",{attrs:{id:"https（加密，认证，完整性保护）-进化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#https（加密，认证，完整性保护）-进化"}},[t._v("#")]),t._v(" HTTPS（加密，认证，完整性保护） (进化)")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("HTTP 缺点")]),t._v(" "),a("ul",[a("li",[t._v("通信使用明文，可以被监听")]),t._v(" "),a("li",[t._v("不验证通信方的身份，可能遭遇伪装")]),t._v(" "),a("li",[t._v("无法证明报文的完整性")])])]),t._v(" "),a("p",[t._v("https: 是以安全为目标的 HTTP 通道，简单讲是 HTTP 的安全版，即 HTTP 下加入 SSL 层，HTTPS 的安全基础是 SSL，因此加密的详细内容就需要 SSL。")]),t._v(" "),a("h2",{attrs:{id:"状态码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#状态码"}},[t._v("#")]),t._v(" 状态码")]),t._v(" "),a("h3",{attrs:{id:"_3xx-重定向"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3xx-重定向"}},[t._v("#")]),t._v(" 3XX 重定向")]),t._v(" "),a("ul",[a("li",[t._v("301 Moved Permanently，该状态码表示请求的资源已被分配了新的 URI，以后应使用资源现在所指的 URI。也就是说，如果已经把资源对应的 URI 保存为书签了，这时应该按 Location 首部字段提示的 URI 重新保存")]),t._v(" "),a("li",[t._v("302 Found，表示请求的资源已经分配到新的 URI，希望本次能使用新的 URI 访问")]),t._v(" "),a("li",[t._v("303 See Other，由于请求对应的资源存在着另一个 URI，应该使用 GET 方法定向的获取请求的资源")]),t._v(" "),a("li",[t._v("304 Not Modified，客户端发送附带条件的请求时，服务器允许请求访问资源，但是未满足情况的条件")])]),t._v(" "),a("h3",{attrs:{id:"_4xx-客户端错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4xx-客户端错误"}},[t._v("#")]),t._v(" 4XX 客户端错误")]),t._v(" "),a("ul",[a("li",[t._v("400 Bad Request，请求报文中存在语法错误")]),t._v(" "),a("li",[t._v("401 Unauthorized，表示发送的请求需要有通过 HTTP 认证的认证信息，之前若进行过一次请求，那么表示用户认证失败")]),t._v(" "),a("li",[t._v("403 Forbidden，对请求资源的访问被禁止")]),t._v(" "),a("li",[t._v("404 Not Found，服务器上无法找到请求的资源")])]),t._v(" "),a("h3",{attrs:{id:"_5xx-服务器错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5xx-服务器错误"}},[t._v("#")]),t._v(" 5XX 服务器错误")]),t._v(" "),a("ul",[a("li",[t._v("500 Internal Serval Error，表示服务器端在执行请求时发生了错误,通用错误消息，服务器遇到了一个未曾预料的状况，导致了它无法完成对请求的处理。没有给出具体错误信息")]),t._v(" "),a("li",[t._v("503 Service Unavailable，表明服务器暂时处于超负载或者正在进行停机维护，现在无法处理请求")])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"_204-no-content"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_204-no-content"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/204",target:"_blank",rel:"noopener noreferrer"}},[t._v("204 No Content"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("The HTTP 204 No Content success status response code indicates that the request has succeeded, but that the client doesn't need to go away from its current page. A 204 response is cacheable by default. An ETag header is included in such a response.")]),t._v(" "),a("p",[t._v("所以对于一些提交到服务器处理的数据，只需要返回是否成功的情况下，可以考虑使用状态码 204 来作为返回信息，从而省掉多余的数据传输。")]),t._v(" "),a("h2",{attrs:{id:"_304-not-modified"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_304-not-modified"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/304",target:"_blank",rel:"noopener noreferrer"}},[t._v("304 Not Modified"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("The HTTP 304 Not Modified client redirection response code indicates that there is "),a("strong",[t._v("no need to retransmit the requested resources")]),t._v(". It is an implicit redirection to "),a("strong",[t._v("a cached resource")]),t._v(". This happens when the request method is safe, like a GET or a HEAD request, or when the request is conditional and uses a If-None-Match or a If-Modified-Since header.")]),t._v(" "),a("h2",{attrs:{id:"_301-302-303-307"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_301-302-303-307"}},[t._v("#")]),t._v(" 301 302 303 307")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/301",target:"_blank",rel:"noopener noreferrer"}},[t._v("301 Moved Permanently"),a("OutboundLink")],1),t._v(":表示永久重定向")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/302",target:"_blank",rel:"noopener noreferrer"}},[t._v("302 Found"),a("OutboundLink")],1),t._v(":表示临时重定向")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/303",target:"_blank",rel:"noopener noreferrer"}},[t._v("303 See Other"),a("OutboundLink")],1),t._v(":The method used to display this redirected page is always GET.")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/307",target:"_blank",rel:"noopener noreferrer"}},[t._v("307 Temporary Redirect"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("301 比较常用的场景是使用域名跳转。302 用来做临时跳转 比如未登陆的用户访问用户中心重定向到登录页面")]),t._v(" "),a("p",[t._v("303 和 307 是 HTTP1.1 新加的服务器响应文档的状态码，它们是对 HTTP1.0 中的 302 状态码的细化")]),t._v(" "),a("h2",{attrs:{id:"http-保活"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-保活"}},[t._v("#")]),t._v(" HTTP 保活")]),t._v(" "),a("ul",[a("li",[t._v("HTTP 中的 Keep-Alive\nConnection:Keep-Alive")])]),t._v(" "),a("h2",{attrs:{id:"tcp-链接为什么断开"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp-链接为什么断开"}},[t._v("#")]),t._v(" TCP 链接为什么断开")]),t._v(" "),a("p",[t._v("一个 TCP 连接可以被长期保持。但是现实总是很骨感，在保持 TCP 连接的过程中很可能出现各种意外的情况，比如网络故障，客户端崩溃或者异常重启，在这种情况下，如果服务端没有及时清理这些连接，服务端将发生连接泄露，直至服务端资源耗尽拒绝提供服务（connection refused exception）")]),t._v(" "),a("h2",{attrs:{id:"get-请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-请求"}},[t._v("#")]),t._v(" get 请求")]),t._v(" "),a("p",[t._v("浏览器会默认缓存 get 请求 ？ 自己需要验证")]),t._v(" "),a("h2",{attrs:{id:"http-redircet-to-https"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-redircet-to-https"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://stackoverflow.com/questions/7450940/automatic-https-connection-redirect-with-node-js-express",target:"_blank",rel:"noopener noreferrer"}},[t._v("http redircet to https"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"http-header"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-header"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP Header"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("Downloads Content-Disposition")]),t._v(" "),a("p",[t._v("可以让用户如下下载文件，")]),t._v(" "),a("p",[t._v("Attachment 可以下载的")]),t._v(" "),a("p",[t._v('Content-Disposition: inline\nContent-Disposition: attachment\nContent-Disposition: attachment;filename="filename.jpg"')]),t._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://dev.to/sidthesloth92/understanding-html-form-encoding-url-encoded-and-multipart-forms-3lpa",target:"_blank",rel:"noopener noreferrer"}},[t._v("Understanding HTML Form Encoding: URL Encoded and Multipart Forms"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://help.aliyun.com/knowledge_detail/95491.html?spm=5176.2020520163.cas.28.7d4556a7qbV98s",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nginx/Tengine 服务器安装 SSL 证书"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://segmentfault.com/a/1190000020714686",target:"_blank",rel:"noopener noreferrer"}},[t._v("解密 HTTP/2 与 HTTP/3 的新特性"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=s.exports}}]);