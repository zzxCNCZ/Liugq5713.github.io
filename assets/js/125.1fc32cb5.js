(window.webpackJsonp=window.webpackJsonp||[]).push([[125],{479:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件"}},[t._v("#")]),t._v(" 组件")]),t._v(" "),a("h2",{attrs:{id:"use-displayname"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#use-displayname"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://reactjs.org/docs/higher-order-components.html#convention-wrap-the-display-name-for-easy-debugging",target:"_blank",rel:"noopener noreferrer"}},[t._v("use displayName"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("通常情况下，你不需要手动去指定 displayName , 因为 react 可以从组件名中推测出来 DisplayName 属性。")]),t._v(" "),a("p",[t._v("但是推荐在高阶组件中，使用 DisplayName 方便你调试，eg:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("withSubscription")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("WrappedComponent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WithSubscription")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* ... */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  WithSubscription"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("displayName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("WithSubscription(")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDisplayName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    WrappedComponent\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" WithSubscription"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"给一个数组添加元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#给一个数组添加元素"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"http://stackoverflow.link/question/40911194",target:"_blank",rel:"noopener noreferrer"}},[t._v("给一个数组添加元素"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("Two different options to add item to an array without mutation")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ADD_ITEM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        arr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("newItem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("OR")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ADD_ITEM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        arr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("newItem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"容器组件和展示组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器组件和展示组件"}},[t._v("#")]),t._v(" 容器组件和展示组件")]),t._v(" "),a("p",[t._v("容器组件： 提供数据和行为 ， 并不会包含 DOM 标签和 CSS 样式，然后渲染对应的子组件")]),t._v(" "),a("h3",{attrs:{id:"展示组件-无状态组件："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#展示组件-无状态组件："}},[t._v("#")]),t._v(" 展示组件/无状态组件：")]),t._v(" "),a("ul",[a("li",[t._v("关注页面的展示效果（外观）")]),t._v(" "),a("li",[t._v("内部可以包含展示组件和容器组件，通常会包含一些自己的 DOM 标记和样式(style)")]),t._v(" "),a("li",[t._v("通常允许通过 this.props.children 方式来包含其他组件。\n对应用程序的其他部分没有依赖关系，例如 Flux 操作或 store。")]),t._v(" "),a("li",[t._v("不用关心数据是怎么加载和变动的。")]),t._v(" "),a("li",[t._v("只能通过 props 的方式接收数据和进行回调(callback)操作。\n很少拥有自己的状态，即使有也是用于展示 UI 状态的。")]),t._v(" "),a("li",[t._v("会被写成函数式组件除非该组件需要自己的状态，生命周期或者做一些性能优化。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" React "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IProps")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... props interface")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NEW syntax for typing function components")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" MyNewComponent"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FC")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("IProps"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("容器组件（Container Component）")]),t._v(" "),a("ul",[a("li",[t._v("关注应用的是如何工作的")]),t._v(" "),a("li",[t._v("内部可以包含容器组件和展示组件，但通常没有任何自己的 DOM 标记，除了一些包装 divs，并且从不具有任何样式。")]),t._v(" "),a("li",[t._v("提供数据和行为给其他的展示组件或容器组件。")]),t._v(" "),a("li",[t._v("调用 Flux 操作并将它们作为回调函数提供给展示组件。往往是有状态的，因为它们倾向于作为数据源")]),t._v(" "),a("li",[t._v("通常使用高阶组件生成，例如 React Redux 的 connect（），Relay 的 createContainer（）或 Flux Utils 的 Container.create（），而不是手工编写。")])]),t._v(" "),a("h2",{attrs:{id:"什么时候引入容器？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么时候引入容器？"}},[t._v("#")]),t._v(" 什么时候引入容器？")]),t._v(" "),a("p",[t._v("我的建议是，你最好先做展示组件。当你意识到，有一些中间组件传递了过多的 props，有一些组件并不使用它们继承的 props 而只是将这些 props 传递给他们的子级，而且每次子级组件需要更多数据时，你都需要重新调整或编写这些中间组件，那么，这时候你可以考虑引入容器组件了。")]),t._v(" "),a("h2",{attrs:{id:"有状态组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有状态组件"}},[t._v("#")]),t._v(" 有状态组件")]),t._v(" "),a("h2",{attrs:{id:"受控组件和非受控组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#受控组件和非受控组件"}},[t._v("#")]),t._v(" 受控组件和非受控组件")]),t._v(" "),a("p",[t._v("https://reactjs.org/docs/forms.html#controlled-components")]),t._v(" "),a("p",[t._v("了解一下 react 的受控组件和非受控组件")]),t._v(" "),a("h2",{attrs:{id:"一些原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一些原则"}},[t._v("#")]),t._v(" 一些原则")]),t._v(" "),a("p",[t._v("有状态的组件没有渲染，有渲染的组件没有状态。 这个思路可以用作写组件的指导思想。")]),t._v(" "),a("p",[t._v("eg：自己的代码里有不下 30 个的 isShow、isOpen、isVisible 和对应一个 toggle 方法，而没有人去想过可以有 withToggle 这样的 HoC 解决问题。并不是不想去抽象，而是当 isShow、isOpen 和其它的逻辑混在一起，比如{isShow, username}和{isOpen, validationErrors}的时候，普通的人无法从这 2 个大集合中挑出 isShow 和 isOpen 并准确地认知到他们是可以复用的")]),t._v(" "),a("p",[t._v("React Hooks 要解决的问题是状态共享,注意重点是状态共享而不是 ui 复用。")]),t._v(" "),a("h2",{attrs:{id:"为什么-setstate-不设计成返回一个-promise"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么-setstate-不设计成返回一个-promise"}},[t._v("#")]),t._v(" 为什么 setState 不设计成返回一个 promise")]),t._v(" "),a("ol",[a("li",[t._v("解决异步带来的困扰方案其实很多。比如，我们可以在合适的生命周期 hook 函数中完成相关逻辑。在这个场景里，就是在行组件的 componentDidMount 里调用 focus，自然就完成了自动聚焦。")]),t._v(" "),a("li",[t._v("任何需要使用 setState 第二个参数 callback 的场景，都可以使用生命周期函数 componentDidUpdate (and/or componentDidMount) 来复写。")])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/facebook/react/issues/2642",target:"_blank",rel:"noopener noreferrer"}},[t._v("github 讨论：Make setState return a promise"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/28905707",target:"_blank",rel:"noopener noreferrer"}},[t._v("从 setState promise 化的探讨 体会 React 团队设计思想"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"react-写法声明-state"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-写法声明-state"}},[t._v("#")]),t._v(" react 写法声明 state")]),t._v(" "),a("p",[t._v("这样做有一个好处，只是声明了一处。声明了初始值，通过类型推断判断出类型。这样就不用分开写了。之前我是先声明类型，然后在类里面定义初始值。")]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" initialState "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("freeze")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  optionWords"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" h"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dictation_comm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Word"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  words"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  bizType"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" BizType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ShengZi\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ntype StateType "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" initialState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 添加生词弹窗\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WordModal")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PureComponent")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("PropsType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" StateType"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" state "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" initialState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);