(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{441:function(_,v,a){"use strict";a.r(v);var t=a(42),e=Object(t.a)({},(function(){var _=this,v=_.$createElement,a=_._self._c||v;return a("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[a("h1",{attrs:{id:"内置对象-正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内置对象-正则表达式"}},[_._v("#")]),_._v(" 内置对象 正则表达式")]),_._v(" "),a("h2",{attrs:{id:"基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[_._v("#")]),_._v(" 基本概念")]),_._v(" "),a("h3",{attrs:{id:"元字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#元字符"}},[_._v("#")]),_._v(" 元字符")]),_._v(" "),a("ul",[a("li",[_._v(". 匹配除换行符以外的任意字符")]),_._v(" "),a("li",[_._v("\\w 匹配字母或数字或下划线或汉字")]),_._v(" "),a("li",[_._v("\\s 匹配任意的空白符")]),_._v(" "),a("li",[_._v("\\d 匹配数字")]),_._v(" "),a("li",[_._v("\\b 匹配单词的开始或结束")]),_._v(" "),a("li",[_._v("^ 匹配字符串的开始")]),_._v(" "),a("li",[_._v("$ 匹配字符串的结束")])]),_._v(" "),a("h3",{attrs:{id:"重复"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重复"}},[_._v("#")]),_._v(" 重复")]),_._v(" "),a("ul",[a("li",[a("ul",[a("li",[_._v("重复零次或更多次")])])]),_._v(" "),a("li",[a("ul",[a("li",[_._v("重复一次或更多次")])])]),_._v(" "),a("li",[_._v("? 重复零次或一次")]),_._v(" "),a("li",[_._v("{n} 重复 n 次")]),_._v(" "),a("li",[_._v("{n,} 重复 n 次或更多次")]),_._v(" "),a("li",[_._v("{n,m} 重复 n 到 m 次")])]),_._v(" "),a("h3",{attrs:{id:"分枝条件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分枝条件"}},[_._v("#")]),_._v(" 分枝条件")]),_._v(" "),a("p",[_._v("具体方法是用|把不同的规则分隔开")]),_._v(" "),a("h3",{attrs:{id:"字符集"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符集"}},[_._v("#")]),_._v(" 字符集")]),_._v(" "),a("p",[_._v("字符集也叫做字符类. 方括号用来指定一个字符集. 在方括号中使用连字符来指定字符集的范围. 在方括号中的字符集不关心顺序. 例如, 表达式[Tt]he 匹配 the 和 The")]),_._v(" "),a("h3",{attrs:{id:"特征标群"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特征标群"}},[_._v("#")]),_._v(" (...) 特征标群")]),_._v(" "),a("p",[_._v("特征标群是一组写在 (...) 中的子模式. 例如之前说的 {} 是用来表示前面一个字符出现指定次数. 但如果在 {} 前加入特征标群则表示整个标群内的字符重复 N 次. 例如, 表达式 (ab)* 匹配连续出现 0 或更多个 ab.")]),_._v(" "),a("h3",{attrs:{id:"反义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反义"}},[_._v("#")]),_._v(" 反义")]),_._v(" "),a("ul",[a("li",[a("code",[_._v("\\W")]),_._v(" 匹配任意不是字母，数字，下划线，汉字的字符")]),_._v(" "),a("li",[a("code",[_._v("\\S")]),_._v(" 匹配任意不是空白符的字符")]),_._v(" "),a("li",[a("code",[_._v("\\D")]),_._v(" 匹配任意非数字的字符")]),_._v(" "),a("li",[a("code",[_._v("\\B")]),_._v(" 匹配不是单词开头或结束的位置")]),_._v(" "),a("li",[_._v("[^x] 匹配除了 x 以外的任意字符")]),_._v(" "),a("li",[_._v("[^aeiou] 匹配除了 aeiou 这几个字母以外的任意字符")])]),_._v(" "),a("h2",{attrs:{id:"后向引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#后向引用"}},[_._v("#")]),_._v(" 后向引用")]),_._v(" "),a("p",[_._v("使用小括号指定一个子表达式后，匹配这个子表达式的文本(也就是此分组捕获的内容)可以在表达式或其它程序中作进一步的处理。")]),_._v(" "),a("h2",{attrs:{id:"特殊字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特殊字符"}},[_._v("#")]),_._v(" 特殊字符")]),_._v(" "),a("ul",[a("li",[a("code",[_._v("\\b")]),_._v(" 通常是单词分界位置，但如果在字符类里使用代表退格")]),_._v(" "),a("li",[a("code",[_._v("\\t")]),_._v(" 制表符，Tab")]),_._v(" "),a("li",[a("code",[_._v("\\r")]),_._v(" 回车")]),_._v(" "),a("li",[a("code",[_._v("\\v")]),_._v(" 竖向制表符")]),_._v(" "),a("li",[a("code",[_._v("\\f")]),_._v(" 换页符")]),_._v(" "),a("li",[a("code",[_._v("\\n")]),_._v(" 换行符")]),_._v(" "),a("li",[a("code",[_._v("\\e")]),_._v(" Escape")])]),_._v(" "),a("h2",{attrs:{id:"正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[_._v("#")]),_._v(" 正则表达式")]),_._v(" "),a("p",[a("code",[_._v("\\s")]),_._v(": 匹配一个空白字符，包括空格、制表符、换页符和换行符")]),_._v(" "),a("p",[a("code",[_._v("\\S")]),_._v(": 匹配一个非空白字符。")]),_._v(" "),a("p",[a("code",[_._v("\\w")]),_._v(": 匹配一个单字字符（字母、数字或者下划线）。等价于 [A-Za-z0-9_]")]),_._v(" "),a("p",[a("code",[_._v("\\W")]),_._v(": 匹配一个非单字字符。等价于 [^a-za-z0-9_]。")]),_._v(" "),a("p",[a("code",[_._v("\\d")]),_._v(": 匹配一个数字。等价于[0-9]。")]),_._v(" "),a("p",[a("code",[_._v("\\D")]),_._v(": 匹配一个非数字字符。等价于[^0-9]")]),_._v(" "),a("h2",{attrs:{id:"方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[_._v("#")]),_._v(" 方法")]),_._v(" "),a("h3",{attrs:{id:"regexp-test"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#regexp-test"}},[_._v("#")]),_._v(" RegExp.test()")]),_._v(" "),a("p",[_._v("know if a string matches a regular expression RegExp")]),_._v(" "),a("h3",{attrs:{id:"regexp-exec"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#regexp-exec"}},[_._v("#")]),_._v(" RegExp.exec()")]),_._v(" "),a("p",[_._v("only want the first match found")]),_._v(" "),a("p",[_._v("obtain capture groups and the global flag is set")]),_._v(" "),a("h2",{attrs:{id:"常见的正则匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见的正则匹配"}},[_._v("#")]),_._v(" 常见的正则匹配")]),_._v(" "),a("h3",{attrs:{id:"sha256"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sha256"}},[_._v("#")]),_._v(" SHA256")]),_._v(" "),a("p",[_._v("SHA256 由 16 进制的数字组成，使用正则验证的时候，验证一下是否是 16 进制的数，是否是 64 个数字, 正则表则式像这样 ^[A-Fa-f0-9]{64}$")])])}),[],!1,null,null,null);v.default=e.exports}}]);