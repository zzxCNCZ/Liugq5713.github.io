(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{302:function(t,a,s){"use strict";s.r(a);var e=s(38),r=Object(e.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"css"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css","aria-hidden":"true"}},[t._v("#")]),t._v(" CSS")]),t._v(" "),s("h2",{attrs:{id:"优先级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优先级","aria-hidden":"true"}},[t._v("#")]),t._v(" 优先级")]),t._v(" "),s("p",[t._v("行内样式 > id 选择器 > class 选择器 > 元素选择器")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".blue")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" blue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".red")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("red blue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("item"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("blue red"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("item"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("class 之间是没有权重关系的，所以以 CSS 后定义的为准")]),t._v(" "),s("h3",{attrs:{id:"控制页面文字不能被选中"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#控制页面文字不能被选中","aria-hidden":"true"}},[t._v("#")]),t._v(" 控制页面文字不能被选中")]),t._v(" "),s("blockquote",[s("p",[t._v("来自我导航站项目的一个小需求，我发现，我点击快了，文字会被选中，非常的丑陋。也可以用于 html 中可能有些地方不想让用户复制文字")])]),t._v(" "),s("p",[t._v("一个 CSS 属性就可以了。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("user-select")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" auto | text | none | contain | all"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("none 表示不能选中文本")]),t._v(" "),s("li",[t._v("text 表示可以选择文本")]),t._v(" "),s("li",[t._v("all ，这个属性，可以实现点击就选中文本哦。其定义\nIn an HTML editor, if a double-click or context-click occurred in sub-elements, the highest ancestor with this value will be selected.")])]),t._v(" "),s("h2",{attrs:{id:"元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元素","aria-hidden":"true"}},[t._v("#")]),t._v(" 元素")]),t._v(" "),s("h3",{attrs:{id:"inline-元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#inline-元素","aria-hidden":"true"}},[t._v("#")]),t._v(" inline 元素")]),t._v(" "),s("p",[t._v('image 为啥只是 inline 元素而不是 inline-block 元素？ （来自于张鑫旭的《CSS 世界》）\n这里需要引入一个新的概念，替换元素（通过修改某个属性值呈现的内容就可以被替换的元素）和非替换元素。那么由定义 image 标签就是典型的替换元素，image 标签可以设置宽高式是替换元素的尺寸计算规则决定的。\n替换元素与非替换元素之间的只是隔了" src " 或 " content " 属性。单独使用 image 标签，不添加 src 属性的话，它的表现就是一个内联元素。')]),t._v(" "),s("h2",{attrs:{id:"盒模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#盒模型","aria-hidden":"true"}},[t._v("#")]),t._v(" 盒模型")]),t._v(" "),s("h3",{attrs:{id:"border"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#border","aria-hidden":"true"}},[t._v("#")]),t._v(" border")]),t._v(" "),s("p",[t._v("注意 border-style 的默认值为 none，所以 单纯设置 border-width/border-color 没有边框显示")]),t._v(" "),s("h2",{attrs:{id:"布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#布局","aria-hidden":"true"}},[t._v("#")]),t._v(" 布局")]),t._v(" "),s("h3",{attrs:{id:"bfc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bfc","aria-hidden":"true"}},[t._v("#")]),t._v(" BFC")]),t._v(" "),s("p",[t._v("就是 block formatting context 的缩写")]),t._v(" "),s("h4",{attrs:{id:"bfc-特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bfc-特性","aria-hidden":"true"}},[t._v("#")]),t._v(" BFC 特性")]),t._v(" "),s("ol",[s("li",[t._v("内部的 Box 会在垂直方向，从顶部开始一个接一个地放置。")]),t._v(" "),s("li",[t._v("Box 垂直方向的距离由 margin 决定。属于同一个 BFC 的两个相邻 Box 的 margin 会发生叠加")]),t._v(" "),s("li",[t._v("每个元素的 margin box 的左边， 与包含块 border box 的左边相接触(对于从左往右的格式化，否则相反)。即使存在浮动也是如此。")]),t._v(" "),s("li",[t._v("BFC 的区域不会与 float box 叠加。")]),t._v(" "),s("li",[t._v("BFC 就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素，反之亦然。")]),t._v(" "),s("li",[t._v("计算 BFC 的高度时，浮动元素也参与计算。")])]),t._v(" "),s("h4",{attrs:{id:"触发-bfc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#触发-bfc","aria-hidden":"true"}},[t._v("#")]),t._v(" 触发 BFC")]),t._v(" "),s("ol",[s("li",[t._v("float 除了 none 以外的值")]),t._v(" "),s("li",[t._v("overflow 除了 visible 以外的值（hidden，auto，scroll ）")]),t._v(" "),s("li",[t._v("display (table-cell，table-caption，inline-block, flex, inline-flex)")]),t._v(" "),s("li",[t._v("position 值为（absolute，fixed）")]),t._v(" "),s("li",[t._v("fieldset 元素")])]),t._v(" "),s("h4",{attrs:{id:"运用-bfc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运用-bfc","aria-hidden":"true"}},[t._v("#")]),t._v(" 运用 BFC")]),t._v(" "),s("ol",[s("li",[t._v("解决 margin 叠加问题")]),t._v(" "),s("li",[t._v("用于布局")]),t._v(" "),s("li",[t._v("用于清除浮动，计算 BFC 高度.")])]),t._v(" "),s("h2",{attrs:{id:"属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性","aria-hidden":"true"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),s("h3",{attrs:{id:"pointer-events"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pointer-events","aria-hidden":"true"}},[t._v("#")]),t._v(" pointer-events")]),t._v(" "),s("p",[t._v("今天写水印组件的时候了解到 CSS 的一个属性，pointer-events，因为水印都是添加在元素上方的，会影响元素的操作，给它添加个 pointer-event:none 那么水印层就完全不 care 鼠标事件了。（有种穿透的效果）")]),t._v(" "),s("h2",{attrs:{id:"效果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#效果","aria-hidden":"true"}},[t._v("#")]),t._v(" 效果")]),t._v(" "),s("h3",{attrs:{id:"视差滚动效果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#视差滚动效果","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"http://www.alloyteam.com/2014/01/parallax-scrolling-love-story/",target:"_blank",rel:"noopener noreferrer"}},[t._v("视差滚动效果"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("background-attach")])])},[],!1,null,null,null);a.default=r.exports}}]);