(window.webpackJsonp=window.webpackJsonp||[]).push([[134],{488:function(t,s,a){"use strict";a.r(s);var e=a(42),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),a("h2",{attrs:{id:"tldr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tldr"}},[t._v("#")]),t._v(" TLDR")]),t._v(" "),a("p",[t._v("react 组件挂载和更新时候触发的生命周期，以及为什么 react 的生命周期会发生变化，以及 pureComponent 为什么能够提升性能，以及注意点")]),t._v(" "),a("h2",{attrs:{id:"mounting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mounting"}},[t._v("#")]),t._v(" Mounting")]),t._v(" "),a("p",[t._v("These methods are called in the following order when an instance of a component is being created and inserted into the DOM，执行顺序如下：")]),t._v(" "),a("ol",[a("li",[t._v("constructor()")]),t._v(" "),a("li",[t._v("static getDerivedStateFromProps()")]),t._v(" "),a("li",[t._v("render()")]),t._v(" "),a("li",[t._v("componentDidMount()")])]),t._v(" "),a("p",[t._v("render 并不做实际的渲染动作，它只是返回一个 JSX 描述的结构，render 函数应该是一个纯函数，完全根据 this.state 和 this.props 来决定返回的结果")]),t._v(" "),a("h2",{attrs:{id:"updating"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#updating"}},[t._v("#")]),t._v(" Updating")]),t._v(" "),a("p",[t._v("An update can be caused by changes to props or state. These methods are called in the following order when a component is being re-rendered:")]),t._v(" "),a("ul",[a("li",[t._v("static getDerivedStateFromProps()")]),t._v(" "),a("li",[t._v("shouldComponentUpdate(nextProps,nextState)")]),t._v(" "),a("li",[t._v("render()")]),t._v(" "),a("li",[t._v("getSnapshotBeforeUpdate(prevProps, prevState)")]),t._v(" "),a("li",[t._v("componentDidUpdate(prevProps,prevState,value)")])]),t._v(" "),a("p",[t._v("注意点：")]),t._v(" "),a("p",[t._v("getSnapshotBeforeUpdate 返回一个值，作为 componentDidUpdate 的第三个参数")]),t._v(" "),a("p",[t._v("React 更新 DOM 和 refs 之后，运行 componentDidUpdate\nprops 更改引发的可视变化（副作用,比如 log,ga），在 componentDidUpdate 中处理")]),t._v(" "),a("h2",{attrs:{id:"demo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#demo"}},[t._v("#")]),t._v(" demo")]),t._v(" "),a("p",[t._v("比如我这个子组件，父组件传入的 clock 总是在改变，但是这个子组件却不会在重新渲染了。")]),t._v(" "),a("p",[t._v("因为这个 props 虽然发生了一点改变，但是没有触发 state 的更新，update 的时候触发的生命周期，组件更新的时候，先触发静态方法 static getDerivedStateFromProps, 然后触发 shouldComponentUpdate,接着渲染组件，然后触发 getSnapshotBeforeUpdate() , 最后确认更新")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"react"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LifeCycle")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      now"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   static getDerivedStateFromProps(nextProps, prevState) {")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//     return { now: nextProps.clock, patch: "patch" };')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   }")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" now "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("hello "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("now"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLocaleString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" LifeCycle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"生命周期详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生命周期详解"}},[t._v("#")]),t._v(" 生命周期详解")]),t._v(" "),a("h3",{attrs:{id:"shouldcomponentupdate-nextprops-nextstate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shouldcomponentupdate-nextprops-nextstate"}},[t._v("#")]),t._v(" shouldComponentUpdate(nextProps, nextState)")]),t._v(" "),a("p",[t._v("props 和 state 改变后，会触发这个生命周期。默认返回 true。")]),t._v(" "),a("p",[t._v("这个钩子不会被调用的情况：")]),t._v(" "),a("ul",[a("li",[t._v("initial render")]),t._v(" "),a("li",[t._v("when forceUpdate() is used")])]),t._v(" "),a("p",[t._v("注意点：")]),t._v(" "),a("p",[t._v("不要依赖这个方法去阻止组件更新，如果你有这个优化的需求，可以使用 PureComponent 组件。且这个方法返回 false， UNSAFE_componentWillUpdate(), render(), and componentDidUpdate()等生命周期不会被调用，且不会阻止子组件重新渲染。")]),t._v(" "),a("h4",{attrs:{id:"component-vs-purecomponent"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#component-vs-purecomponent"}},[t._v("#")]),t._v(" Component VS PureComponent")]),t._v(" "),a("p",[t._v("这两个组件唯一的区别就是 shouldComponentUpdate 。PureComponent 会对 state 和 props 进行一层浅比较")]),t._v(" "),a("p",[t._v("写组件的注意点")]),t._v(" "),a("ul",[a("li",[t._v("Don’t bind values in functions in render")])]),t._v(" "),a("p",[t._v("不要这么做，"),a("code",[t._v("<CommentItem likeComment={() => this.likeComment(user.id)} />")]),t._v("，因为父组件重新渲染时，会生成新的函数（引用也是新的），导致子组件是新的")]),t._v(" "),a("p",[t._v("建议这样："),a("code",[t._v("<CommentItem likeComment={this.likeComment} userID={user.id} />")])]),t._v(" "),a("ul",[a("li",[t._v("Don’t derive data in the render method")])]),t._v(" "),a("p",[t._v("不要这样做：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" posts "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" topTen "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("posts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n    b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("likes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("likes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("因为 topTen 每次都会是一个新的引用，就会导致重新渲染。")]),t._v(" "),a("h2",{attrs:{id:"为什么要改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么要改"}},[t._v("#")]),t._v(" 为什么要改")]),t._v(" "),a("p",[t._v("旧的生命周期十分完整，基本可以捕捉到组件更新的每一个 state/props/ref，没有什从逻辑上的毛病。\n但是架不住官方自己搞事情，react 打算在 17 版本推出新的 Async Rendering，提出一种可被打断的生命周期，而可以被打断的阶段正是实际 dom 挂载之前的虚拟 dom 构建阶段，也就是要被去掉的三个生命周期。\n生命周期一旦被打断，下次恢复的时候又会再跑一次之前的生命周期，因此 componentWillMount，componentWillReceiveProps， componentWillUpdate 都不能保证只在挂载/拿到 props/状态变化的时候刷新一次了，所以这三个方法被标记为不安全。")]),t._v(" "),a("p",[t._v("https://juejin.im/post/5aca20c96fb9a028d700e1ce")]),t._v(" "),a("h2",{attrs:{id:"生命周期-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生命周期-2"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://codesandbox.io/s/quirky-water-xj6og?file=/src/children.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("生命周期 demo"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://codeburst.io/when-to-use-component-or-purecomponent-a60cfad01a81",target:"_blank",rel:"noopener noreferrer"}},[t._v("When to use Component or PureComponent"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);