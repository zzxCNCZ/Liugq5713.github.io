(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{398:function(e,t,a){"use strict";a.r(t);var o=a(42),s=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"数据存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据存储"}},[e._v("#")]),e._v(" 数据存储")]),e._v(" "),a("h2",{attrs:{id:"cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies",target:"_blank",rel:"noopener noreferrer"}},[e._v("cookie"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("cookies are small files which are located on a user’s computer. They are designed to hold a generous amount of data specific to a client and website, and they can accessed either by the web server or the client computer.")]),e._v(" "),a("p",[e._v("cookie 实质上是 键值对")]),e._v(" "),a("ul",[a("li",[e._v("大小 4KB")]),e._v(" "),a("li",[e._v("每次都会携带在 HTTP 头中，如果使用 cookie 保存过多数据会带来性能问题")])]),e._v(" "),a("h3",{attrs:{id:"cookie-的-httponly-和-secure-的属性作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie-的-httponly-和-secure-的属性作用"}},[e._v("#")]),e._v(" Cookie 的 HttpOnly 和 Secure 的属性作用")]),e._v(" "),a("p",[a("code",[e._v("Set-Cookie: id=a3fWa; Expires=Wed, 21 Oct 2015 07:28:00 GMT; Secure; HttpOnly")])]),e._v(" "),a("h4",{attrs:{id:"secure"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#secure"}},[e._v("#")]),e._v(" secure")]),e._v(" "),a("p",[e._v("Secure 属性 ，意味着 Cookie 通信只限于加密传输，指示浏览器仅仅在通过安全/加密连接才能使用该 Cookie。如果一个 Web 服务器从一个非安全连接里设置了一个带有 secure 属性的 Cookie，当 Cookie 被发送到客户端时，它仍然能通过中间人攻击来拦截。")]),e._v(" "),a("h4",{attrs:{id:"httponly"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#httponly"}},[e._v("#")]),e._v(" HttpOnly")]),e._v(" "),a("p",[e._v("Cookie 的 HttpOnly 属性，指示浏览器不要在除 HTTP（和 HTTPS)请求之外暴露 Cookie。一个有 HttpOnly 属性的 Cookie，不能通过非 HTTP 方式来访问，例如通过调用 JavaScript(例如，引用 document.cookie），因此，不可能通过跨域脚本（一种非常普通的攻击技术）来偷走这种 Cookie。尤其是 Facebook 和 Google 正在广泛地使用 HttpOnly 属性。")]),e._v(" "),a("h2",{attrs:{id:"web-存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web-存储"}},[e._v("#")]),e._v(" Web 存储")]),e._v(" "),a("h3",{attrs:{id:"localstorage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#localstorage"}},[e._v("#")]),e._v(" localStorage")]),e._v(" "),a("ul",[a("li",[e._v("大小 5M")]),e._v(" "),a("li",[e._v("没有过期时间的设定")])]),e._v(" "),a("h3",{attrs:{id:"sessionstorage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sessionstorage"}},[e._v("#")]),e._v(" sessionStorage")]),e._v(" "),a("h2",{attrs:{id:"cookie-vs-localstorage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie-vs-localstorage"}},[e._v("#")]),e._v(" cookie vs localStorage")]),e._v(" "),a("ul",[a("li",[e._v("目的不同： cookie 主要是给服务端读取，localStorage 只能客户端读取")]),e._v(" "),a("li",[e._v("时效不同：cookie 有过期时间的设定，localStorage 为了存储而生(接口好用，cookie 需要分装)，只能通过 Javascript 或者浏览器清除存储的数据")]),e._v(" "),a("li",[e._v("大小不同：cookie 大小 4kb，localStorage 大小 5M")])]),e._v(" "),a("h2",{attrs:{id:"localstorage-vs-sessionstorage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#localstorage-vs-sessionstorage"}},[e._v("#")]),e._v(" localStorage vs sessionStorage")]),e._v(" "),a("p",[e._v("sessionStorage 基本和 localStorage 相同，区别仅仅是")]),e._v(" "),a("h3",{attrs:{id:"indexdb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#indexdb"}},[e._v("#")]),e._v(" IndexDB")]),e._v(" "),a("p",[e._v("结构化数据存储机制")])])}),[],!1,null,null,null);t.default=s.exports}}]);