(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{313:function(t,e,r){"use strict";r.r(e);var a=r(38),s=Object(a.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"内置对象-json"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#内置对象-json","aria-hidden":"true"}},[t._v("#")]),t._v(" 内置对象 JSON")]),t._v(" "),r("div",{staticClass:"tip custom-block"},[r("p",{staticClass:"custom-block-title"},[t._v("JSON 的规格")]),t._v(" "),r("ol",[r("li",[t._v('并列的数据之间用逗号（", "）分隔。')]),t._v(" "),r("li",[t._v('映射用冒号（": "）表示。')]),t._v(" "),r("li",[t._v('并列数据的集合（数组）用方括号("[]")表示。')]),t._v(" "),r("li",[t._v('映射的集合（对象）用大括号（"{}"）表示。')])])]),t._v(" "),r("blockquote",[r("p",[t._v("一直不是很清楚 JSON.parse 是把字符串转成 JSON,还是将 JSON 转成字符串。后来我就记起来了，JSON.parse 就是 parse json")])]),t._v(" "),r("h2",{attrs:{id:"json-parse"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#json-parse","aria-hidden":"true"}},[t._v("#")]),t._v(" "),r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse",target:"_blank",rel:"noopener noreferrer"}},[t._v("JSON.parse"),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v("parses a JSON string, constructing the JavaScript value or object described by the string")]),t._v(" "),r("p",[t._v("JSON.parse 也有一个额外的参数，可以传一个函数")]),t._v(" "),r("h2",{attrs:{id:"json-stringify"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#json-stringify","aria-hidden":"true"}},[t._v("#")]),t._v(" "),r("a",{attrs:{href:"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify",target:"_blank",rel:"noopener noreferrer"}},[t._v("JSON.stringify"),r("OutboundLink")],1)]),t._v(" "),r("div",{staticClass:"warning custom-block"},[r("p",[t._v("如果数据有循环引用的情况，那么使用 "),r("code",[t._v("JSON.stringify")]),t._v(" 会报错")])]),t._v(" "),r("p",[t._v("The JSON.stringify() method converts a JavaScript value to a JSON string, optionally replacing values if a replacer function is specified or optionally including only the specified properties if a replacer array is specified.")]),t._v(" "),r("h3",{attrs:{id:"美化格式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#美化格式","aria-hidden":"true"}},[t._v("#")]),t._v(" 美化格式")]),t._v(" "),r("p",[t._v("可能很少有人关注它的第二个和第三个参数吧，JSON.stringify 方法一共能接受 3 个参数，其中两个可选的参数，最后一个参数（字符串或者数字）是用来格式化显示的")]),t._v(" "),r("p",[t._v("JSON.stringify(students, null, 4);表示用每行缩进 4 个空格的格式来格式化 stringify 后的字符串")]),t._v(" "),r("h3",{attrs:{id:"筛选数据"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#筛选数据","aria-hidden":"true"}},[t._v("#")]),t._v(" 筛选数据")]),t._v(" "),r("p",[t._v("当我们传数组给 stringify 的第二个参数(可以是一个函数，含有字符串的数组或者数字)时，其中的内容表示可序列化的属性名，而且这个设定是递归的")])])},[],!1,null,null,null);e.default=s.exports}}]);